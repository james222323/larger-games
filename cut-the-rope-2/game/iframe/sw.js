const CACHE_NAME="ctr2-cache-v2",CORE_ASSETS="./ctr2-files.json",broadcast=new BroadcastChannel("sw-update-channel");self.addEventListener("install",t=>{t.waitUntil((async()=>{try{broadcast.postMessage({type:"progress",payload:"Caching game assets..."});const t=await caches.open(CACHE_NAME),a=await fetch(CORE_ASSETS);if(!a.ok)throw new Error(`Failed to fetch asset list: ${a.status} ${a.statusText}`);const e=await a.json(),s=e.length;let c=0;for(const a of e){await t.add(a),c++;const e=Math.round(c/s*100);broadcast.postMessage({type:"progress",payload:`Caching assets: ${e}%`})}await self.skipWaiting(),broadcast.postMessage({type:"success",payload:"Cache complete!"})}catch(t){broadcast.postMessage({type:"error",payload:`Installation failed: ${t.message}`}),console.error("Installation failed:",t)}})())}),self.addEventListener("activate",t=>{const a="ctr2-cache";t.waitUntil((async()=>{try{const t=await caches.keys();await Promise.all(t.map(t=>{if(t.startsWith(a)&&t!==CACHE_NAME)return console.log("Deleting old cache:",t),caches.delete(t)})),await self.clients.claim()}catch(t){console.error("Activation failed:",t)}})())}),self.addEventListener("fetch",t=>{const a=t.request.url;a.includes("google-analytics.com")||a.includes("googletagmanager.com")||a.includes("ads.")||!t.request.url.startsWith(self.location.origin)||t.respondWith((async()=>{try{const a=await caches.match(t.request);if(a)return a;const e=await fetch(t.request);if(e&&200===e.status&&t.request.url.startsWith(self.location.origin)){const a=await caches.open(CACHE_NAME);a.put(t.request,e.clone())}return e}catch(t){throw console.error("Fetch failed:",t),t}})())});